plugins {
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	id 'idea'
	id("maven-publish")
}


repositories {
	mavenCentral()

}


dependencyManagement {

	imports {
		mavenBom 'org.springframework.boot:spring-boot-dependencies:3.1.1'
	}

	dependencies {

	}
}

sourceCompatibility = 17
targetCompatibility = 17

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation group: "org.apache.commons", name: "commons-lang3", version: "3.12.0"
	implementation group: "org.apache.commons", name: "commons-collections4", version: "4.4"
	implementation group: "org.apache.commons", name: "commons-text", version: "1.+"
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.junit.vintage:junit-vintage-engine")
	implementation('org.springframework.boot:spring-boot-starter-log4j2')

}

configurations {
	all*.exclude group:'org.springframework.boot',
			module:'spring-boot-starter-logging'
	tests
}

test {
	useJUnitPlatform()
}




jar {
	enabled = true
	archiveClassifier = ''
	archiveBaseName = 'dagnabitlib'
	manifest {
		attributes("Implementation-Title": "Dagnabitlib", "Created-By": "OnBelay Consulting")
	}
}

task runUnitTests(type: Test) {
	jvmArgs '-Xmx2G', '-Xms512m', '-Duser.timezone=GMT-7'
	testLogging.exceptionFormat "full" //produces a little more information in the output, mainly useful for development
	scanForTestClasses = false  //this turns off the auto discovery feature which causes all kinds of false failures

	include "**/*Test.class"

	exclude "**/Base*.class" //have no tests in them
	exclude "**/*TestCase.class" //has no tests in it

	testLogging {
		int numTestsPerformed = 0
		afterTest { desc, result ->
			numTestsPerformed++
			if (numTestsPerformed % 100 == 0) {
				println('Still Testing... finished ' + numTestsPerformed + ' tests')
			}
		}
	}
}


bootJar {
  enabled = false
}


publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/onbelayconsulting/dagnabit")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
				password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
			}
		}
	}
	publications {
		obcorelibrary(MavenPublication) {
			groupId = 'com.onbelay.dagnabit'
			artifactId = 'dagnabitlib'
			version = System.getenv("SEMANTIC_VERSION") ?: project.findProperty("semantic_version")
			artifact jar
		}
	}
}

